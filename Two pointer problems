283. Move Zeroes

func moveZeroes(nums []int)  {
    currPos:=0
    for i:=0;i < len(nums);i++ {
        if nums[i]!=0 {
            nums[currPos] = nums[i]
            currPos++
        }
    }
    for i:=currPos; i < len(nums);i++{
        nums[i] = 0
    }
}

392. Is Subsequence

func isSubsequence(s string, t string) bool {

    index2:=0
    if len(s) == 0 {
        return true
    }
    for index1:=0; index1<len(t); index1++ {   
        if s[index2] == t[index1] {            
            index2++
        }       
        if index2 >= len(s) {
            return true
        }
    }
    return false
}


11. Container With Most Water

func maxArea(height []int) int {
    left:=0
    right:= len(height)-1
    max :=0
    for {
        if left > right {
            break
        }
        h := min(height[left] , height[right])
        total := h * (right-left)
         if total > max {
            max = total
        }
        if height[left]  > height[right] {
            right--
        } else {
            left++
        }
    }
    return max
}
func min(a,b int) int {
    if a < b {
        return a
    }
    return b
}

1679. Max Number of K-Sum Pairs

func maxOperations(nums []int, k int) int {
    op :=0
    indexMap := map[int]int{}
    for i :=0 ; i < len(nums); i++ {
        diff := k - nums[i]
        if count, found := indexMap[diff]; found {
            op++
            count--
            if count==0 {
               delete(indexMap, diff)
            } else {
                indexMap[diff] = count
            }
        } else {
            if count2, found2  := indexMap[nums[i]]; found2 {                
               indexMap[nums[i]] = count2 + 1
            } else {
                indexMap[nums[i]] = 1
            }
        }
    }
    return op
}
